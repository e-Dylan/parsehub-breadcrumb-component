{"version":3,"sources":["components/ContentPage.js","App.js","reportWebVitals.js","index.js"],"names":["Separator","style","margin","ContentsPage","props","useState","getContents","root","contents","setContents","changeDir","currentDir","setCurrentDir","name","path","parent","undefined","crumbs","setCrumbs","className","map","crumb","index","color","length","onClick","updatePreviousCrumbs","item","addCrumb","ref","fileName","children","fileType","type","console","log","home","myname","mysupersecretproject","mysupersecretfile","Object","keys","key","push","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.718844a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './styles/ContentPage.scss';\r\nimport './styles/Breadcrumb.scss';\r\n\r\nfunction Separator() {\r\n\treturn (<span style={{margin: 40 + 'px'}}>/</span>)\r\n}\r\n\r\nexport default function ContentsPage(props) {\r\n\r\n\t// Initialize directory at the root.\r\n\tvar [contents, setContents] = useState(props.getContents(props.root));\r\n\tvar [currentDir, setCurrentDir] = useState(props.changeDir(props.root));\r\n\t\r\n\t// Initialize breadcrumb with root.\r\n\tvar root = {\r\n\t\tname: 'root',\r\n\t\tpath: props.root,\r\n\t\tparent: undefined,\r\n\t}\r\n\tvar [crumbs, setCrumbs] = useState([root]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav className=\"breadcrumb-nav\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t{ crumbs.map((crumb, index) => \r\n\t\t\t\t\t\t<li className=\"crumb\" key={index}>\r\n\t\t\t\t\t\t\t<Separator />\r\n\t\t\t\t\t\t\t<a \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: (index === crumbs.length-1) ? `gray` : `#0099ff`\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t// clicked on file in contents, change to that file.\r\n\t\t\t\t\t\t\t\t// All files store references to their child's path.\r\n\t\t\t\t\t\t\t\tsetCurrentDir(props.changeDir(crumb.path));\r\n\t\t\t\t\t\t\t\tsetContents(props.getContents(crumb.path));\r\n\r\n\t\t\t\t\t\t\t\t// Clear breadcrumbs after this crumb.\r\n\t\t\t\t\t\t\t\tsetCrumbs(props.updatePreviousCrumbs(crumbs, index));\r\n\r\n\r\n\t\t\t\t\t\t\t}}>{crumb.name}</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</ol>\r\n\t\t\t\r\n\t\t\t</nav>\r\n\r\n\t\t\t<div className=\"contents-container\">\r\n\t\t\t\t<div className=\"content-bars\">\r\n\t\t\t\t\t<ul className=\"file-bar\">\r\n\t\t\t\t\t\t<li>File Name</li>\r\n\t\t\t\t\t\t<li>Type</li>\r\n\t\t\t\t\t\t<li>Created</li>\r\n\t\t\t\t\t\t<li>Modified</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t{ contents.map((item, index) =>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<ul className=\"file-bar\" key={index}>\r\n\t\t\t\t\t\t\t\t<li className=\"file-name\" key={item.children} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t// Update crumbs before we change dir, store reference to current dir (next dir's parent).\r\n\t\t\t\t\t\t\t\t\t\tsetCrumbs(props.addCrumb(crumbs, currentDir, item))\r\n\t\t\t\t\t\t\t\t\t\t// console.log(crumbs);\r\n\t\t\t\t\t\t\t\t\t\tsetCurrentDir(props.changeDir(item.ref));\r\n\t\t\t\t\t\t\t\t\t\tsetContents(props.getContents(item.ref));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}>{item.fileName}\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t<li>{item.fileType}</li>\r\n\t\t\t\t\t\t\t\t<li>0:00 PM</li>\r\n\t\t\t\t\t\t\t\t<li>0:00 PM</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\r\n\t\t\t\t\t) }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Show active filename only if current path is a file. */}\r\n\t\t\t\t{crumbs.length > 0 && crumbs[crumbs.length-1].path.type === \"file\" &&\r\n\t\t\t\t\t<div className=\"active-file\" onClick={console.log(crumbs)}>\r\n\t\t\t\t\t\t<span>Current open file: </span>\r\n\t\t\t\t\t\t<a>{crumbs[crumbs.length-1].name}</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import './App.css';\n\nimport { useEffect, useState } from 'react';\n\n// Components\nimport ContentPage from './components/ContentPage';\n\n// loop through entire object, at every children dir:\n// set children.parent = currentPath, give each child of object the children object.\n// in getContents - for files: use fileName: path\n\nlet root = {\n\ttype: \"dir\",\n\tchildren: {\n\t\t\thome: {\n\t\t\t\ttype: \"dir\",\n\t\t\t\tchildren: {\n\t\t\t\t\tmyname: {\n\t\t\t\t\t\ttype: \"dir\",\n\t\t\t\t\t\tchildren: {\n\t\t\t\t\t\t\t\"filea.txt\": {\n\t\t\t\t\t\t\t\ttype: \"file\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fileb.txt\": {\n\t\t\t\t\t\t\t\ttype: \"file\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"projects\": {\n\t\t\t\t\t\t\t\ttype: \"dir\",\n\t\t\t\t\t\t\t\tchildren: {\n\t\t\t\t\t\t\t\t\tmysupersecretproject: {\n\t\t\t\t\t\t\t\t\t\ttype: \"dir\",\n\t\t\t\t\t\t\t\t\t\tchildren: {\n\t\t\t\t\t\t\t\t\t\t\tmysupersecretfile: {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"file\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t},\n};\n\n// Get contents of current directory, fill contents to render.\nfunction getContents(path) {\n\n\tvar contents = [];\n\n\tif (path != null) {\n\t\tif (path.type === \"dir\") {\n\t\t\tObject.keys(path.children).map((key, index) => {\n\t\t\t\t// Map through all children (contents)\n\t\t\t\t\tcontents.push({\n\t\t\t\t\t\tfileName: Object.keys(path.children)[index],\n\t\t\t\t\t\tfileType: path.children[key].type,\n\t\t\t\t\t\tpath: path,\n\t\t\t\t\t\tref: path.children[key],\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\t}\n\t// console.log(contents);\n\treturn contents;\n}\n\n/**\n * Clicked on a file or directory in contents, add it to breadcrumbs.\n *  \n * @param crumbs: array of current crumb items in breadcrumb at current path.\n * @param currentDir: object to current path, tracks the parent to next crumb.\n * @param item: new file that is added as the next crumb.\n */\nfunction addCrumb(crumbs, currentDir, item) {\n\tcrumbs.push({\n\t\tname: item.fileName,\n\t\tpath: item.ref,\n\t\tparent: currentDir, // parent cannot be found from the object itself. Store parent as directory which we came from.\n\t});\n\treturn crumbs;\n}\n\n/**\n * Clicked a previous directory in breadcrumb\n * \n * @param crumbs: array of current breadcrumb path items. \n * @param index: index of new path location being sent to.\n */\nfunction updatePreviousCrumbs(crumbs, index) {\n\tcrumbs = crumbs.slice(0, index+1);\n\treturn crumbs;\n}\n\nfunction changeDir(path) {\n\tvar currentDir = path;\n\treturn currentDir;\n}\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ContentPage \n\t\t\t\troot={root}\n\t\t\t\tgetContents={getContents} \n\t\t\t\taddCrumb={addCrumb}\n\t\t\t\tupdatePreviousCrumbs={updatePreviousCrumbs}\n\t\t\t\tchangeDir={changeDir}\n\t\t\t/>\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}